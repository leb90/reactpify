{% comment %}
  Testimonials Section - Auto-generated with Metaobject Support
  Liquid template that renders SSR data and prepares React hydration
{% endcomment %}

{% schema %}
{
  "name": "Testimonials",
  "tag": "section",
  "class": "testimonials-section",
  "settings": [
    {
      "type": "header",
      "content": "Testimonials Settings"
    },
    {
      "type": "text",
      "id": "title",
      "label": "title",
      "default": "Sample title"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "subtitle",
      "default": "Sample subtitle"
    },
    {
      "type": "text",
      "id": "testimonials",
      "label": "testimonials"
    },
    {
      "type": "text",
      "id": "name",
      "label": "name"
    },
    {
      "type": "text",
      "id": "role",
      "label": "role"
    },
    {
      "type": "text",
      "id": "company",
      "label": "company"
    },
    {
      "type": "textarea",
      "id": "content",
      "label": "content",
      "default": "Sample content"
    },
    {
      "type": "text",
      "id": "rating",
      "label": "rating"
    },
    {
      "type": "text",
      "id": "avatar",
      "label": "avatar"
    }
  ],
  "presets": [
    {
      "name": "Testimonials"
    }
  ]
}
{% endschema %}

{%- liquid
  assign title = section.settings.title
  assign subtitle = section.settings.subtitle
  assign testimonials = section.settings.testimonials
  assign name = section.settings.name
  assign role = section.settings.role
  assign company = section.settings.company
  assign content = section.settings.content
  assign rating = section.settings.rating
  assign avatar = section.settings.avatar
-%}

<section class="testimonials-section" id="testimonials-section-{{ section.id }}">
  
  {%- comment -%} React Component Root {%- endcomment -%}
  <div data-component-root="Testimonials" class="testimonials-container">
    
    {%- comment -%} JSON data for React - Script with data-section-data {%- endcomment -%}
    <script type="application/json" data-section-data>
      {
        "componentName": "Testimonials",
        "title": {{ title | json }},
        "subtitle": {{ subtitle | json }},
        "testimonials": {{ testimonials | json }},
        "name": {{ name | json }},
        "role": {{ role | json }},
        "company": {{ company | json }},
        "content": {{ content | json }},
        "rating": {{ rating | json }},
        "avatar": {{ avatar | json }},
        "settings": {
          "title": {{ title | json }},
        "subtitle": {{ subtitle | json }},
        "testimonials": {{ testimonials | json }},
        "name": {{ name | json }},
        "role": {{ role | json }},
        "company": {{ company | json }},
        "content": {{ content | json }},
        "rating": {{ rating | json }},
        "avatar": {{ avatar | json }},
          "sectionId": "{{ section.id }}"
        }
      }
    </script>

    {%- comment -%} Smart Fallback Content - Shows if JavaScript doesn't load {%- endcomment -%}
    <div class="testimonials-fallback" style="display: block;">
      <div class="max-w-6xl mx-auto">
        <h1 class="text-4xl font-bold text-gray-900 mb-4">
          âœ¨ {% if title %}{{ title }}{% else %}Testimonials{% endif %}
        </h1>
        
        {% if subtitle %}
          <p class="text-xl text-gray-600 max-w-2xl mx-auto">{{ subtitle }}</p>
        {% endif %}
        
        <div class="inline-flex items-center gap-2 px-3 py-1 bg-white/20 rounded-full text-sm mt-4">
          <span class="w-2 h-2 bg-green-400 rounded-full animate-pulse"></span>
          ðŸš€ React component loading...
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  /* Hide fallback when React component loads */
  .testimonials-container:has(.reactpify-component) .testimonials-fallback {
    display: none !important;
  }

  /* Additional fallback cleanup */
  [data-component-root="Testimonials"]:has(.reactpify-component) .testimonials-fallback {
    display: none !important;
  }
</style>