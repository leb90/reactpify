{% comment %}
  HeroBanner Section - Auto-generated with Metaobject Support
  Liquid template that renders SSR data and prepares React hydration
{% endcomment %}

{% schema %}
{
  "name": "Hero Banner",
  "tag": "section",
  "class": "hero-banner-section",
  "settings": [
    {
      "type": "header",
      "content": "HeroBanner Settings"
    },
    {
      "type": "text",
      "id": "title",
      "label": "title",
      "default": "Sample title"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "subtitle",
      "default": "Sample subtitle"
    },
    {
      "type": "text",
      "id": "buttontext",
      "label": "button Text"
    },
    {
      "type": "url",
      "id": "buttonurl",
      "label": "button Url"
    },
    {
      "type": "color",
      "id": "backgroundcolor",
      "label": "background Color",
      "default": "#3b82f6"
    },
    {
      "type": "checkbox",
      "id": "showbutton",
      "label": "show Button",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "showvideo",
      "label": "show Video",
      "default": true
    },
    {
      "type": "text",
      "id": "emailplaceholder",
      "label": "email Placeholder"
    }
  ],
  "presets": [
    {
      "name": "Hero Banner"
    }
  ]
}
{% endschema %}

{%- liquid
  assign title = section.settings.title
  assign subtitle = section.settings.subtitle
  assign buttontext = section.settings.buttontext
  assign buttonurl = section.settings.buttonurl
  assign backgroundcolor = section.settings.backgroundcolor
  assign showbutton = section.settings.showbutton
  assign showvideo = section.settings.showvideo
  assign emailplaceholder = section.settings.emailplaceholder
-%}

<section class="hero-banner-section" id="hero-banner-section-{{ section.id }}">
  
  {%- comment -%} React Component Root {%- endcomment -%}
  <div data-component-root="HeroBanner" class="hero-banner-container">
    
    {%- comment -%} JSON data for React - Script with data-section-data {%- endcomment -%}
    <script type="application/json" data-section-data>
      {
        "componentName": "HeroBanner",
        "title": {{ title | json }},
        "subtitle": {{ subtitle | json }},
        "buttonText": {{ buttontext | json }},
        "buttonUrl": {{ buttonurl | json }},
        "backgroundColor": {{ backgroundcolor | json }},
        "showButton": {{ showbutton | json }},
        "showVideo": {{ showvideo | json }},
        "emailPlaceholder": {{ emailplaceholder | json }},
        "settings": {
          "title": {{ title | json }},
        "subtitle": {{ subtitle | json }},
        "buttonText": {{ buttontext | json }},
        "buttonUrl": {{ buttonurl | json }},
        "backgroundColor": {{ backgroundcolor | json }},
        "showButton": {{ showbutton | json }},
        "showVideo": {{ showvideo | json }},
        "emailPlaceholder": {{ emailplaceholder | json }},
          "sectionId": "{{ section.id }}"
        }
      }
    </script>

    {%- comment -%} Smart Fallback Content - Shows if JavaScript doesn't load {%- endcomment -%}
    <div class="hero-banner-fallback" style="display: block;">
      <div class="absolute top-0 left-0 w-full h-full">
        <div class="relative z-10 text-center max-w-4xl mx-auto px-6">
          <h1 class="text-5xl md:text-7xl font-black mb-6 leading-tight">
            ðŸŽ¯ {% if title %}{{ title }}{% else %}HeroBanner{% endif %}
          </h1>
          
          {% if subtitle %}
            <p class="text-xl md:text-2xl opacity-90 mb-8 max-w-2xl mx-auto leading-relaxed">{{ subtitle }}</p>
          {% endif %}
          
          <div class="inline-flex items-center gap-2 px-4 py-2 bg-white/10 rounded-full text-sm">
            <span class="w-2 h-2 bg-green-400 rounded-full animate-pulse"></span>
            ðŸš€ React component loading...
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  /* Hide fallback when React component loads */
  .hero-banner-container:has(.reactpify-component) .hero-banner-fallback {
    display: none !important;
  }

  /* Additional fallback cleanup */
  [data-component-root="HeroBanner"]:has(.reactpify-component) .hero-banner-fallback {
    display: none !important;
  }
</style>