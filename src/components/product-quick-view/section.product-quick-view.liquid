{% comment %}
  ProductQuickView Section - Auto-generated with Metaobject Support
  Liquid template that renders SSR data and prepares React hydration
{% endcomment %}

{% schema %}
{
  "name": "Product Quick View",
  "tag": "section",
  "class": "product-quick-view-section",
  "settings": [
    {
      "type": "header",
      "content": "ProductQuickView Settings"
    },
    {
      "type": "product",
      "id": "productid",
      "label": "product Id"
    },
    {
      "type": "checkbox",
      "id": "showprice",
      "label": "show Price",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "showaddtocart",
      "label": "show Add To Cart",
      "default": true
    },
    {
      "type": "text",
      "id": "title",
      "label": "title",
      "default": "Sample title"
    }
  ],
  "presets": [
    {
      "name": "Product Quick View"
    }
  ]
}
{% endschema %}

{%- liquid
  assign productid = all_products[section.settings.productid]
  assign showprice = section.settings.showprice
  assign showaddtocart = section.settings.showaddtocart
  assign title = section.settings.title
-%}

<section class="product-quick-view-section" id="product-quick-view-section-{{ section.id }}">
  
  {%- comment -%} React Component Root {%- endcomment -%}
  <div data-component-root="ProductQuickView" class="product-quick-view-container">
    
    {%- comment -%} JSON data for React - Script with data-section-data {%- endcomment -%}
    <script type="application/json" data-section-data>
      {
        "componentName": "ProductQuickView",
        "productId": {{ productid | json }},
        "showPrice": {{ showprice | json }},
        "showAddToCart": {{ showaddtocart | json }},
        "title": {{ title | json }},
        "settings": {
          "productId": {{ productid | json }},
        "showPrice": {{ showprice | json }},
        "showAddToCart": {{ showaddtocart | json }},
        "title": {{ title | json }},
          "sectionId": "{{ section.id }}"
        }
      }
    </script>

    {%- comment -%} Smart Fallback Content - Shows if JavaScript doesn't load {%- endcomment -%}
    <div class="product-quick-view-fallback" style="display: block;">
      <div style="
      position: relative;
      overflow: hidden;
      border-radius: 1rem;
      box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 2rem;
      text-align: center;
      margin: 2rem auto;
      max-width: 500px;
    ">
      <h2 style="
        font-size: 1.5rem;
        font-weight: bold;
        margin-bottom: 1rem;
      ">
        âœ¨ {% if title %}{{ title }}{% else %}ProductQuickView{% endif %}
      </h2>
      
      {% if subtitle %}
        <p style="margin-bottom: 1.5rem; opacity: 0.9;">{{ subtitle }}</p>
      {% endif %}
      
      <p style="font-size: 0.875rem; opacity: 0.8;">
        ðŸš€ React component loading...
      </p>
    </div>
    </div>
  </div>
</section>

<style>
  /* Hide fallback when React component loads */
  .product-quick-view-container:has(.reactpify-component) .product-quick-view-fallback {
    display: none !important;
  }
  
  /* Additional fallback cleanup */
  [data-component-root="ProductQuickView"]:has(.reactpify-component) .product-quick-view-fallback {
    display: none !important;
  }
</style>